<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.media.AudioAttributes.Builder android.media.AudioAttributes.Builder setContentType(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioAttributes.CONTENT_TYPE_UNKNOWN, android.media.AudioAttributes.CONTENT_TYPE_SPEECH, android.media.AudioAttributes.CONTENT_TYPE_MUSIC, android.media.AudioAttributes.CONTENT_TYPE_MOVIE, android.media.AudioAttributes.CONTENT_TYPE_SONIFICATION}" />
    </annotation>
  </item>
  <item name="android.media.AudioAttributes.Builder android.media.AudioAttributes.Builder setUsage(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioAttributes.USAGE_UNKNOWN, android.media.AudioAttributes.USAGE_MEDIA, android.media.AudioAttributes.USAGE_VOICE_COMMUNICATION, android.media.AudioAttributes.USAGE_VOICE_COMMUNICATION_SIGNALLING, android.media.AudioAttributes.USAGE_ALARM, android.media.AudioAttributes.USAGE_NOTIFICATION, android.media.AudioAttributes.USAGE_NOTIFICATION_RINGTONE, android.media.AudioAttributes.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, android.media.AudioAttributes.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, android.media.AudioAttributes.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, android.media.AudioAttributes.USAGE_NOTIFICATION_EVENT, android.media.AudioAttributes.USAGE_ASSISTANCE_ACCESSIBILITY, android.media.AudioAttributes.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, android.media.AudioAttributes.USAGE_ASSISTANCE_SONIFICATION, android.media.AudioAttributes.USAGE_GAME, android.media.AudioAttributes.USAGE_ASSISTANT}" />
    </annotation>
  </item>
  <item name="android.media.AudioFormat.Builder android.media.AudioFormat.Builder setEncoding(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="false" />
      <val name="value" val="{android.media.AudioFormat.ENCODING_DEFAULT, android.media.AudioFormat.ENCODING_PCM_8BIT, android.media.AudioFormat.ENCODING_PCM_16BIT, android.media.AudioFormat.ENCODING_PCM_FLOAT, android.media.AudioFormat.ENCODING_AC3, android.media.AudioFormat.ENCODING_E_AC3, android.media.AudioFormat.ENCODING_E_AC3_JOC, android.media.AudioFormat.ENCODING_DTS, android.media.AudioFormat.ENCODING_DTS_HD, android.media.AudioFormat.ENCODING_IEC61937, android.media.AudioFormat.ENCODING_AAC_HE_V1, android.media.AudioFormat.ENCODING_AAC_HE_V2, android.media.AudioFormat.ENCODING_AAC_LC, android.media.AudioFormat.ENCODING_AAC_ELD, android.media.AudioFormat.ENCODING_AAC_XHE, android.media.AudioFormat.ENCODING_AC4}" />
    </annotation>
  </item>
  <item name="android.media.AudioManager float getStreamVolumeDb(int, int, int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="false" />
      <val name="value" val="{android.media.AudioManager.STREAM_VOICE_CALL, android.media.AudioManager.STREAM_SYSTEM, android.media.AudioManager.STREAM_RING, android.media.AudioManager.STREAM_MUSIC, android.media.AudioManager.STREAM_ALARM, android.media.AudioManager.STREAM_NOTIFICATION, android.media.AudioManager.STREAM_DTMF, android.media.AudioManager.STREAM_ACCESSIBILITY}" />
    </annotation>
  </item>
  <item name="android.media.AudioManager float getStreamVolumeDb(int, int, int) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="flag" val="false" />
      <val name="value" val="{android.media.AudioDeviceInfo.TYPE_BUILTIN_EARPIECE, android.media.AudioDeviceInfo.TYPE_BUILTIN_SPEAKER, android.media.AudioDeviceInfo.TYPE_WIRED_HEADSET, android.media.AudioDeviceInfo.TYPE_WIRED_HEADPHONES, android.media.AudioDeviceInfo.TYPE_BLUETOOTH_SCO, android.media.AudioDeviceInfo.TYPE_BLUETOOTH_A2DP, android.media.AudioDeviceInfo.TYPE_HDMI, android.media.AudioDeviceInfo.TYPE_DOCK, android.media.AudioDeviceInfo.TYPE_USB_ACCESSORY, android.media.AudioDeviceInfo.TYPE_USB_DEVICE, android.media.AudioDeviceInfo.TYPE_USB_HEADSET, android.media.AudioDeviceInfo.TYPE_TELEPHONY, android.media.AudioDeviceInfo.TYPE_LINE_ANALOG, android.media.AudioDeviceInfo.TYPE_HDMI_ARC, android.media.AudioDeviceInfo.TYPE_LINE_DIGITAL, android.media.AudioDeviceInfo.TYPE_FM, android.media.AudioDeviceInfo.TYPE_AUX_LINE, android.media.AudioDeviceInfo.TYPE_IP, android.media.AudioDeviceInfo.TYPE_BUS, android.media.AudioDeviceInfo.TYPE_HEARING_AID}" />
    </annotation>
  </item>
  <item name="android.media.AudioPresentation int getMasteringIndication()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioPresentation.MASTERING_NOT_INDICATED, android.media.AudioPresentation.MASTERED_FOR_STEREO, android.media.AudioPresentation.MASTERED_FOR_SURROUND, android.media.AudioPresentation.MASTERED_FOR_3D, android.media.AudioPresentation.MASTERED_FOR_HEADPHONE}" />
    </annotation>
  </item>
  <item name="android.media.AudioRecord int getTimestamp(android.media.AudioTimestamp, int) 1">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTimestamp.TIMEBASE_MONOTONIC, android.media.AudioTimestamp.TIMEBASE_BOOTTIME}" />
    </annotation>
  </item>
  <item name="android.media.AudioRecord int read(byte[], int, int, int) 3">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioRecord.READ_BLOCKING, android.media.AudioRecord.READ_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioRecord int read(float[], int, int, int) 3">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioRecord.READ_BLOCKING, android.media.AudioRecord.READ_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioRecord int read(java.nio.ByteBuffer, int, int) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioRecord.READ_BLOCKING, android.media.AudioRecord.READ_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioRecord int read(short[], int, int, int) 3">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioRecord.READ_BLOCKING, android.media.AudioRecord.READ_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioRecordingConfiguration int getClientAudioSource()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.MediaRecorder.AudioSource.DEFAULT, android.media.MediaRecorder.AudioSource.MIC, android.media.MediaRecorder.AudioSource.VOICE_UPLINK, android.media.MediaRecorder.AudioSource.VOICE_DOWNLINK, android.media.MediaRecorder.AudioSource.VOICE_CALL, android.media.MediaRecorder.AudioSource.CAMCORDER, android.media.MediaRecorder.AudioSource.VOICE_RECOGNITION, android.media.MediaRecorder.AudioSource.VOICE_COMMUNICATION, android.media.MediaRecorder.AudioSource.UNPROCESSED}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack int getPerformanceMode()">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.PERFORMANCE_MODE_NONE, android.media.AudioTrack.PERFORMANCE_MODE_LOW_LATENCY, android.media.AudioTrack.PERFORMANCE_MODE_POWER_SAVING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack int write(byte[], int, int, int) 3">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.WRITE_BLOCKING, android.media.AudioTrack.WRITE_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack int write(float[], int, int, int) 3">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.WRITE_BLOCKING, android.media.AudioTrack.WRITE_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack int write(java.nio.ByteBuffer, int, int) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.WRITE_BLOCKING, android.media.AudioTrack.WRITE_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack int write(java.nio.ByteBuffer, int, int, long) 2">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.WRITE_BLOCKING, android.media.AudioTrack.WRITE_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack int write(short[], int, int, int) 3">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.WRITE_BLOCKING, android.media.AudioTrack.WRITE_NON_BLOCKING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack.Builder android.media.AudioTrack.Builder setPerformanceMode(int) 0">
    <annotation name="androidx.annotation.IntDef">
      <val name="value" val="{android.media.AudioTrack.PERFORMANCE_MODE_NONE, android.media.AudioTrack.PERFORMANCE_MODE_LOW_LATENCY, android.media.AudioTrack.PERFORMANCE_MODE_POWER_SAVING}" />
    </annotation>
  </item>
  <item name="android.media.AudioTrack.Builder android.media.AudioTrack.Builder 